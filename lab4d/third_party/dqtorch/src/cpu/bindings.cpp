#include "dqtorch.h"
#include <torch/extension.h>

PYBIND11_MODULE(TORCH_EXTENSION_NAME, m) {
    m.def("standardize_quaternion_fw", &standardize_quaternion_fw, "standardize_quaternion_fw");
    m.def("standardize_quaternion_bw", &standardize_quaternion_bw, "standardize_quaternion_bw");
    m.def("quaternion_raw_multiply_fw", &quaternion_raw_multiply_fw, "quaternion_raw_multiply_fw");
    m.def("quaternion_raw_multiply_bw", &quaternion_raw_multiply_bw, "quaternion_raw_multiply_bw");
    m.def("quaternion_multiply_fw", &quaternion_multiply_fw, "quaternion_multiply_fw");
    m.def("quaternion_multiply_bw", &quaternion_multiply_bw, "quaternion_multiply_bw");
    m.def("quaternion_conjugate_fw", &quaternion_conjugate_fw, "quaternion_conjugate_fw");
    m.def("quaternion_conjugate_bw", &quaternion_conjugate_bw, "quaternion_conjugate_bw");
    m.def("quaternion_apply_fw", &quaternion_apply_fw, "quaternion_apply_fw");
    m.def("quaternion_apply_bw", &quaternion_apply_bw, "quaternion_apply_bw");
    m.def("quaternion_to_matrix_fw", &quaternion_to_matrix_fw, "quaternion_to_matrix_fw");
    m.def("quaternion_to_matrix_bw", &quaternion_to_matrix_bw, "quaternion_to_matrix_bw");
    m.def("matrix_to_raw_quaternion_fw", &matrix_to_raw_quaternion_fw, "matrix_to_raw_quaternion_fw");
    m.def("matrix_to_raw_quaternion_bw", &matrix_to_raw_quaternion_bw, "matrix_to_raw_quaternion_bw");
    m.def("matrix_to_quaternion_fw", &matrix_to_quaternion_fw, "matrix_to_quaternion_fw");
    m.def("matrix_to_quaternion_bw", &matrix_to_quaternion_bw, "matrix_to_quaternion_bw");
    m.def("axis_angle_to_quaternion_fw", &axis_angle_to_quaternion_fw, "axis_angle_to_quaternion_fw");
    m.def("axis_angle_to_quaternion_bw", &axis_angle_to_quaternion_bw, "axis_angle_to_quaternion_bw");
    m.def("quaternion_to_axis_angle_fw", &quaternion_to_axis_angle_fw, "quaternion_to_axis_angle_fw");
    m.def("quaternion_to_axis_angle_bw", &quaternion_to_axis_angle_bw, "quaternion_to_axis_angle_bw");
    m.def("axis_angle_to_matrix_fw", &axis_angle_to_matrix_fw, "axis_angle_to_matrix_fw");
    m.def("axis_angle_to_matrix_bw", &axis_angle_to_matrix_bw, "axis_angle_to_matrix_bw");
    m.def("matrix_to_axis_angle_fw", &matrix_to_axis_angle_fw, "matrix_to_axis_angle_fw");
    m.def("matrix_to_axis_angle_bw", &matrix_to_axis_angle_bw, "matrix_to_axis_angle_bw");
    m.def("quaternion_translation_mul_fw", &quaternion_translation_mul_fw, "quaternion_translation_mul_fw");
    m.def("quaternion_translation_mul_bw", &quaternion_translation_mul_bw, "quaternion_translation_mul_bw");
    m.def("quaternion_translation_apply_fw", &quaternion_translation_apply_fw, "quaternion_translation_apply_fw");
    m.def("quaternion_translation_apply_bw", &quaternion_translation_apply_bw, "quaternion_translation_apply_bw");
    m.def("quaternion_translation_inverse_fw", &quaternion_translation_inverse_fw, "quaternion_translation_inverse_fw");
    m.def("quaternion_translation_inverse_bw", &quaternion_translation_inverse_bw, "quaternion_translation_inverse_bw");
    m.def("dual_quaternion_mul_fw", &dual_quaternion_mul_fw, "dual_quaternion_mul_fw");
    m.def("dual_quaternion_mul_bw", &dual_quaternion_mul_bw, "dual_quaternion_mul_bw");
    m.def("dual_quaternion_apply_fw", &dual_quaternion_apply_fw, "dual_quaternion_apply_fw");
    m.def("dual_quaternion_apply_bw", &dual_quaternion_apply_bw, "dual_quaternion_apply_bw");
    m.def("dual_quaternion_q_conjugate_fw", &dual_quaternion_q_conjugate_fw, "dual_quaternion_q_conjugate_fw");
    m.def("dual_quaternion_q_conjugate_bw", &dual_quaternion_q_conjugate_bw, "dual_quaternion_q_conjugate_bw");
    m.def("dual_quaternion_d_conjugate_fw", &dual_quaternion_d_conjugate_fw, "dual_quaternion_d_conjugate_fw");
    m.def("dual_quaternion_d_conjugate_bw", &dual_quaternion_d_conjugate_bw, "dual_quaternion_d_conjugate_bw");
    m.def("dual_quaternion_3rd_conjugate_fw", &dual_quaternion_3rd_conjugate_fw, "dual_quaternion_3rd_conjugate_fw");
    m.def("dual_quaternion_3rd_conjugate_bw", &dual_quaternion_3rd_conjugate_bw, "dual_quaternion_3rd_conjugate_bw");
    m.def("dual_quaternion_norm_fw", &dual_quaternion_norm_fw, "dual_quaternion_norm_fw");
    m.def("dual_quaternion_norm_bw", &dual_quaternion_norm_bw, "dual_quaternion_norm_bw");
    m.def("quaternion_translation_to_dual_quaternion_fw", &quaternion_translation_to_dual_quaternion_fw, "quaternion_translation_to_dual_quaternion_fw");
    m.def("quaternion_translation_to_dual_quaternion_bw", &quaternion_translation_to_dual_quaternion_bw, "quaternion_translation_to_dual_quaternion_bw");
    m.def("dual_quaternion_to_quaternion_translation_fw", &dual_quaternion_to_quaternion_translation_fw, "dual_quaternion_to_quaternion_translation_fw");
    m.def("dual_quaternion_to_quaternion_translation_bw", &dual_quaternion_to_quaternion_translation_bw, "dual_quaternion_to_quaternion_translation_bw");
    m.def("quaternion_translation_to_se3_fw", &quaternion_translation_to_se3_fw, "quaternion_translation_to_se3_fw");
    m.def("quaternion_translation_to_se3_bw", &quaternion_translation_to_se3_bw, "quaternion_translation_to_se3_bw");
    m.def("se3_to_quaternion_translation_fw", &se3_to_quaternion_translation_fw, "se3_to_quaternion_translation_fw");
    m.def("se3_to_quaternion_translation_bw", &se3_to_quaternion_translation_bw, "se3_to_quaternion_translation_bw");
    m.def("dual_quaternion_to_se3_fw", &dual_quaternion_to_se3_fw, "dual_quaternion_to_se3_fw");
    m.def("dual_quaternion_to_se3_bw", &dual_quaternion_to_se3_bw, "dual_quaternion_to_se3_bw");
    m.def("se3_to_dual_quaternion_fw", &se3_to_dual_quaternion_fw, "se3_to_dual_quaternion_fw");
    m.def("se3_to_dual_quaternion_bw", &se3_to_dual_quaternion_bw, "se3_to_dual_quaternion_bw");
}
